name: SonarQube (stage)

on:
  push:
    branches: [ "stage" ]
  pull_request:
    branches: [ "stage" ]  # PRs cuyo base es stage (validaci칩n previa al merge)

jobs:
  sonarqube:
    # Ejecuta en push a stage, o en PR dev->stage
    if: >
      github.event_name == 'push' ||
      (github.event_name == 'pull_request' &&
       github.base_ref == 'stage' &&
       github.head_ref == 'dev')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      checks: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # recomendado para un an치lisis correcto

      # --- Paso de an치lisis con el action oficial ---
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v6
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          # Para SonarQube Server (self-hosted); para Cloud no es necesario:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # --- Falla el job si el Quality Gate est치 en rojo ---
      - name: SonarQube Quality Gate
        uses: SonarSource/sonarqube-quality-gate-action@v1.2.0
        with:
          pollingTimeoutSec: 600
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          # Opcional para Server:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

          